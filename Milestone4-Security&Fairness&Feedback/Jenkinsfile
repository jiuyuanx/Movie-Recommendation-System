pipeline {
    agent any

    environment {
        // Define environment variables if needed
        VENV_PATH = 'env'
    }

    stages {
        stage('Setup') {
            steps {
                echo 'Setting up a shared virtual environment and installing packages...'
                sh '''#!/bin/bash
                sudo apt install python3.8-venv -y
                python3 -m venv $VENV_PATH
                sudo chmod -R 0777 $VENV_PATH
                sudo source $VENV_PATH/bin/activate
                pip install . --upgrade
                '''
                // Assuming a shared requirements.txt at the root for common dependencies
                // If each directory has its own requirements.txt, move this into each stage
                // sh 'sudo pip install -r requirements.txt'
            }
        }

        stage('Test') {
            steps {
                sh 'coverage run -m pytest'
                sh 'coverage report'
            }
        }
        
        stage('Build Image') {
            steps {
                sh 'sudo docker build -t milestone3 .'
            }
        }

        stage('Deploy') {
            steps {
                // sh "waitress-serve --port=8082 --threads=100 --call 'flaskr:create_app'"
                // Stop existing container
                sh 'sudo docker rm -f m3'
                sh "sudo docker run --name m3 -dp 0.0.0.0:8082:8082 milestone3"
            }
        }
    }

    post {
        always { 
            echo 'The pipeline completed'
            sh 'rm -rf $VENV_PATH'
        } 
        success {                    
            echo "Flask Application Up and running!!"
        } 
        failure { 
            echo 'Build stage failed'
            error('Stopping early...') 
        } 
    }
    
}